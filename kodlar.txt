const Discord = require('discord.js');
const client = new Discord.Client();
const işaret = require('./işaret.json');
const hedefim = require('./hedef.json');
const {Client, MessageEmbed } = require('discord.js');

var prefix = işaret.prefix
var hedef = hedefim.hedef

client.on("guildMemberAdd", member => {
  try {
    const Counter = member.guild;
  Counter.setName(`Amine Oyunu (${member.guild.memberCount}/${hedef})`);
}
catch (e) {
  console.log(e);
}
}); //sunucu ismi değiştiren counter +

client.on("guildMemberRemove", member => {
  try {
    const Counter = member.guild;
  Counter.setName(`Amine Oyunu (${member.guild.memberCount}/${hedef})`);
}
catch (e) {
  console.log(e);
}
}); //sunucu ismi değiştiren counter -

client.on("guildMemberAdd", member => {
  try {
    const Counter = member.guild.channels.cache.find(channel => channel.id === '835981653179367425');
  Counter.setName(`Üye Sayısı: ${member.guild.memberCount}`);
}
catch (e) {
  console.log(e);
}
}); //Kanal ismi değiştiren counter +

client.on("guildMemberRemove", member => {
  try {
    const Counter = member.guild.channels.cache.find(channel => channel.id === '835981653179367425');
  Counter.setName(`Üye Sayısı: ${member.guild.memberCount}`);
}
catch (e) {
  console.log(e);
}
}); //Kanal ismi değiştiren counter -

client.on('guildMemberAdd', member => {
  const hoşgeldin = member.guild.channels.cache.find(channel => channel.name === 'üye-sayaç');
  hoşgeldin.send(`${member} sunucumuza katıldı. Üye sayımız ${member.guild.memberCount}, üye hedefimiz ${hedef}`);

}); //Hoşgeldin Mesajı member counter +

client.on('guildMemberRemove', member => {
  const hoşgeldin = member.guild.channels.cache.find(channel => channel.name === 'üye-sayaç');
  hoşgeldin.send(`${member} sunucumuzdan ayrıldı. Üye sayımız ${member.guild.memberCount} oldu. Üye hedefimiz ${member.guild.memberCount}/${hedef}`);

}); //Hoşgeldin Mesajı member counter -

client.on('message', msg => {
  if (msg.content.toLowerCase() === 'embed') {
    const kanal = new MessageEmbed()

    .setTitle("Bu bir başlıktır")//başlık ayarlar
    .setDescription("Bu bir açıklamadır")//açıklama ayarlar
    .setAuthor("Challenge Bot Deneme")//mesaj sahibini ayarlar
    .setColor("RANDOM")//rengi ayarlar PINK yazarsan pembe BLUE yazarsan mavi
    .setThumbnail("https://media.discordapp.net/attachments/832525052452667403/835594755681026148/unknown.png")//resmi ayarlar
    .addField(":joy: ", "Burada mesaj yazıyor");//mesajlar yazar
    msg.channel.send(kanal);
  }
}); //embed mesaj

client.on('ready', () => {
  console.log(`Logged in as ${client.user.tag}!`);
  client.user.setActivity('ZAAAAA xd', { type: 'PLAYING'})
  .then(presence => console.log(`Durum ${presence.activities[0].name} oldu.`))
  .catch(console.error);
}); //aktivite ayarı

 client.on('guildMemberAdd', member => {
   const hoşgeldin = member.guild.channels.cache.find(channel => channel.name === 'hoşgeldin');
   hoşgeldin.send(`Hoşgeldin, ${member}`);
  // member.send(`${member} Sunucumuza Hoşgeldin.`) Özelden hoşgeldin mesajı atar.
}); //Hoşgeldin Mesajı

  client.on('guildMemberRemove', member => {
  const hoşgeldin = member.guild.channels.cache.find(channel => channel.name === 'hoşgeldin');
  hoşgeldin.send(`${member}, sunucumuzdan ayrıldı.`);
}); //Sunucudan ayrıldı Mesajı

client.on('message', msg => {
  if (msg.content.toLowerCase() === 'napim') {
    msg.channel.send('götünü sikim');
  }
}); //prefixsiz yanıt

client.on('message', msg => {
  if (msg.content.toLowerCase() === '31') {
    msg.author.send('bu çok komikti sjsjjssj');
  }
}); //özelden mesaj

client.on('message', msg => {
  if (msg.content.toLowerCase() === prefix + 'ching') {
    msg.channel.send('Ching Chong Welcome to China');
  }
}); //prefixli yanıt

client.on('message', msg => {
  if (msg.content.toLowerCase() === 'za') {
    msg.delete()
    msg.channel.send('Bu kelime yasaklı');
  }
}); //yasaklı kelimeyi silme

client.on('message', msg => {
  if (msg.content.toLowerCase() === 'nice bot') {
    msg.react("😄")
    msg.channel.send('sağ ol');
  }
}); //nice bot

client.on('message', msg => {
  if (msg.content.toLowerCase() === 'bad bot') {
    msg.react("😭")
    msg.channel.send('özür dilerim');
  }
}); //bad bot

client.on('message', message => {
  if (!message.guild) return;
  if (message.content.startsWith('!kick')) {
    if(!message.member.hasPermission("ADMINISTRATOR")) return message.channel.send(`Bu komutu kullanmaya yetkin yok.`)
    const user = message.mentions.users.first();
    if (user) {
      const member = message.guild.member(user);
      if (member) {
        member
          .kick()
          .then(() => {
            const log = message.guild.channels.cache.find(channel => channel.name === 'log-channel')
            message.reply(`adlı kullanıcı ${user.tag} kullanıcısını sunucudan atmıştır.`);
          })
          .catch(err => {
            message.reply('Bu kullanıcıyı atmak için yetkim yok.');
            console.error(err);
          });
      } else {
        message.reply("Kullanıcı bu serverda bulunmamaktadır.");
      }
    } else {
      message.reply("Kicklenecek kişiyi belirtmediniz.");
    }
  }
}); //Kick komutu

client.on('message', message => {
  if (!message.guild) return;
  if (message.content.startsWith('!ban')) {
    if(!message.member.hasPermission("ADMINISTRATOR")) return message.channel.send(`Bu komutu kullanmaya yetkin yok.`)
    const user = message.mentions.users.first();
    if (user) {
      const member = message.guild.member(user);
      if (member) {
        member
          .ban()
          .then(() => {
            const log = message.guild.channels.cache.find(channel => channel.name === 'log-channel')
            message.reply(`adlı kullanıcı ${user.tag} kullanıcısını sunucudan banlamıştır.`);
          })
          .catch(err => {
            message.reply('Bu kullanıcıyı atmak için yetkim yok.');
            console.error(err);
          });
      } else {
        message.reply("Kullanıcı bu serverda bulunmamaktadır.");
      }
    } else {
      message.reply("Banlanacak kişiyi belirtmediniz.");
    }
  }
}); //Ban komutu

client.on("guildMemberAdd", member => {
  try {
  let role = member.guild.roles.cache.find(role => role.name === 'Yeni üye')
  member.roles.add(role);
} catch(e) {
  console.log(e);
}
}); //yeni üye rolü

client.on("message", message => {
  if (message.content.startsWith('!rolver')) {
    if(!message.member.hasPermission("ADMINISTRATOR")) return message.channel.send(`Bu komutu kullanmaya yetkin yok.`)
    let role = message.mentions.roles.first();
    let member = message.mentions.members.first();
    member.roles.add(role)
  }
}); //rol ekleme komutu

client.on("message", message => {
  if (message.content.startsWith('!oylama')){
    const args = message.content.split(' ').slice(1)
    const botmesajı = args.join(" ")
    if (!message.member.hasPermission('ADMINISTRATOR')) return message.reply('Oylama yapmak için **yönetici** olmanız gerekmektedir.');
    if (!botmesajı) return message.reply('Oylamanın ne olacağını yazmadınız.');
    message.delete(message.author)
    const embed = new MessageEmbed()
    .setTitle('OYLAMA')
    .setDescription(botmesajı)
    .setFooter('Challenge Botu');
    message.channel.send({ embed: embed }).then( embedMessage => {
      embedMessage.react("👍")
      embedMessage.react("👎");
    })
  }
}); //Oylama komutu

client.on('message', message =>{
  if (message.content.startsWith('!duyuru')) {
    const kanal = message.mentions.channels.first();
    const args = message.content.split(' ').slice(2)
    const botmesajı = args.join(" ")
    if (!message.member.hasPermission('ADMINISTRATOR')) return message.reply('Duyuru yapmak için **yönetici** olmanız gerekmektedir.');
    if (!botmesajı) return message.reply('Neyi duyuracağınızı yazmadınız.');
    if (!kanal) return message.reply('Duyurunun yapılacağı kanalı belirtmediniz.');
    message.delete(message.author)
    kanal.send(botmesajı);
  }
}); //Duyuru komutu

client.on('message', message => {
  if (message.content.startsWith('!dmduyuru')) {
    const kişi = message.mentions.users.first();
    const args = message.content.split(' ').slice(2)
    const botmesajı = args.join(" ")
    if (!message.member.hasPermission('ADMINISTRATOR')) return message.reply('Duyuru yapmak için **yönetici** olmanız gerekmektedir.');
    if (!botmesajı) return message.reply('Neyi duyuracağınızı yazmadınız.');
    if (!kişi) return message.reply('Duyurunun yapılacağı kişiyi seçmediniz.');
    message.delete(message.author)
    kişi.send(botmesajı);
  }
}); //dm duyuru komutu

client.on('message', message => {
  if (message.content.toLowerCase() === '!kiss') {
    var Kiss1 = [
      'https://media.giphy.com/media/G3va31oEEnIkM/giphy.gif',
      'https://media.giphy.com/media/zkppEMFvRX5FC/giphy.gif'
    ];
    var sendöpücük1 = Math.floor(Math.random()*Kiss1.length);
    const embed = new MessageEmbed()
    .setTitle('Öpücük')
    .addField('1. Deneme', `${Kiss1[sendöpücük1]}`)
    .setImage(`${Kiss1[sendöpücük1]}`)
    message.channel.send(embed);
  }
}); //kiss bot

client.on('message',message => {
if (message.content.toLowerCase() === '!random') {
  var Cevap1 = [
     'hımmm bilemedim',
     'olabilir'
   ];
   var Cevap2 = [
    'evet',
    'hayır',
    'neden'
];
    var Cevap1doğru = Math.floor(Math.random()*Cevap1.length);
    var Cevap2doğru = Math.floor(Math.random()*Cevap2.length);
    const embed = new MessageEmbed()
      .setTitle('cevaplar')
      .addField('1.cevap',`${Cevap1[Cevap1doğru]}`)
      .addField('2.cevap',`${Cevap2[Cevap2doğru]}`);
      message.channel.send(embed);
 }
}); //randomizer template

client.on('message',message => {
if (message.content.toLowerCase() === '!turnuva') {
  var Küme1 = [
     'Ömer',
     'Hızır'
   ];
   var Küme2 = [
    'Enes',
    'Arda'
];
    var kümekazanan1 = Math.floor(Math.random()*Küme1.length);
    var kümekazanan2 = Math.floor(Math.random()*Küme2.length);
    var Şampiyon = [
      `${Küme1[kümekazanan1]}`,
      `${Küme2[kümekazanan2]}`
    ];

    var şampiyon = Math.floor(Math.random()*Şampiyon.length);

    const embed = new MessageEmbed()
      .setTitle('cevaplar')
      .addField('1. Kazanan',`${Küme1[kümekazanan1]}`)
      .addField('2. Kazanan',`${Küme2[kümekazanan2]}`)
      .addField('Şampiyon', `${Şampiyon[şampiyon]}`);
      message.channel.send(embed);
 }
}); //randomizer turnuva

client.on('message', async message => {
  if (message.content.startsWith('!play')) {
    const args = message.content.split(' ').slice(1)
    const botmesajı = args.join(" ")
    if (!botmesajı) return message.reply('Bir link atmadınız.')
    if (message.member.voice.channel) {
      const connection = await message.member.voice.channel.join();
      const ytdl = require('ytdl-core');
      connection.play(ytdl(`${botmesajı}`, { filter: 'audioonly'}))
    } else {
      message.reply('Bir sesli kanala katılın.');
    }
  }
}); //müzik botu


client.login('ODM1NTc4OTA3MDQ5NTkwNzg1.YIRffw.YA0hSANQ6Zakmw3WHufUtvyFwLw');
